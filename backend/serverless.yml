service: medication-manager
frameworkVersion: "^4.17.2"

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: dev
  environment:
    DYNAMO_TABLE: medications
    USERS_TABLE: users
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:Scan
            - dynamodb:UpdateItem
            - dynamodb:Query
          Resource:
            - arn:aws:dynamodb:us-east-1:178173414121:table/medications
            - arn:aws:dynamodb:us-east-1:178173414121:table/users

  apiGateway:
    apiKeys:
      - name: myDevApiKey

package:
  individually: true
  exclude:
    - node_modules/**
    - logs/**
    - .serverless/**
    - .vscode/**
    - coverage/**
    - src/handlers/__tests__/**
    - "*.png"
    - "*.jpg"
    - "*.jpeg"
    - "*.zip"
    - "**/*.test.ts"

functions:
  createMedication:
    handler: src/handlers/createMedication.handler
    events:
      - http:
          path: medications
          method: post
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - x-api-key
              - Accept
            allowCredentials: false

  getMedications:
    handler: src/handlers/getMedications.handler
    events:
      - http:
          path: medications
          method: get
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - x-api-key
              - Accept
            allowCredentials: false

  updateTakeLog:
    handler: src/handlers/updateTakeLog.handler
    events:
      - http:
          path: medications/{id}/take
          method: put
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Api-Key
              - Accept
            allowCredentials: false

  toggleActivity:
    handler: src/handlers/toggleActivity.handler
    events:
      - http:
          path: medications/{id}/toggle
          method: put
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Api-Key
              - Accept
            allowCredentials: false

  createUser:
    handler: src/handlers/createUser.handler
    events:
      - http:
          path: users
          method: post
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Api-Key
              - Accept
            allowCredentials: false

  getAllUsers:
    handler: src/handlers/getAllUsers.handler
    events:
      - http:
          path: users
          method: get
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Api-Key
              - Accept
            allowCredentials: false

  getUserById:
    handler: src/handlers/getUserById.handler
    events:
      - http:
          path: users/{id}
          method: get
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Api-Key
              - Accept
            allowCredentials: false

plugins:
  - serverless-offline

resources:
  Resources:
    MedicationsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: medications
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: userId-index
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: users
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
